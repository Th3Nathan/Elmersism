var _exercism$elm$Bob$empty = function (phrase) {
	return _elm_lang$core$String$isEmpty(
		_elm_lang$core$String$trim(phrase));
};
var _exercism$elm$Bob$question = function (phrase) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$String$right, 1, phrase),
		'?');
};
var _exercism$elm$Bob$angry = function (phrase) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$toUpper(phrase),
		phrase) && (!_elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$toLower(phrase),
		phrase));
};
var _exercism$elm$Bob$Other = {ctor: 'Other'};
var _exercism$elm$Bob$Question = {ctor: 'Question'};
var _exercism$elm$Bob$Empty = {ctor: 'Empty'};
var _exercism$elm$Bob$Angry = {ctor: 'Angry'};
var _exercism$elm$Bob$getPhraseType = function (phrase) {
	return _exercism$elm$Bob$angry(phrase) ? _exercism$elm$Bob$Angry : (_exercism$elm$Bob$question(phrase) ? _exercism$elm$Bob$Question : (_exercism$elm$Bob$empty(phrase) ? _exercism$elm$Bob$Empty : _exercism$elm$Bob$Other));
};
var _exercism$elm$Bob$hey = function (phrase) {
	var phraseType = _exercism$elm$Bob$getPhraseType(phrase);
	var _p0 = phraseType;
	switch (_p0.ctor) {
		case 'Angry':
			return 'Whoa, chill out!';
		case 'Question':
			return 'Sure.';
		case 'Empty':
			return 'Fine. Be that way!';
		default:
			return 'Whatever.';
	}
};
